{"version":3,"sources":["components/ImageContainer/index.js","components/Loading/index.js","components/InfoContainer/index.js","components/ImagePreview/index.js","theme.js","Scenes/App/App.js","reportWebVitals.js","index.js"],"names":["ImageHolder","props","url","key","imageId","user","onClickImage","className","onClick","src","loading","alt","Loading","Info","selectedImage","toggleInfoPopup","class","Date","created_at","toLocaleDateString","weekday","year","month","day","views","toLocaleString","downloads","likes","exif","make","aperture","model","exposure_time","focal_length","iso","width","height","ImagePreview","togglePreviewPopup","isPrevDisabled","onClickPrev","onClickNext","disabled","profile_image","small","name","instagram_username","urls","regular","GlobalStyle","createGlobalStyle","customStyles","overlay","backgroundColor","content","border","overflow","background","paddingRight","paddingLeft","customInfoStyles","display","alignItems","justifyContent","App","useState","imageData","setImageData","setSelectedImage","showPreview","setShowPreview","showInfo","setShowInfo","setprevDisabled","fetchUserData","count","accesskey","process","axios","get","then","res","data","useEffect","totalImages","length","selectedImageIndex","findIndex","image","id","onSelectImage","useCallback","ImageData","dataLength","next","hasMore","loader","style","map","full","isOpen","onRequestClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d58b506.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css';\r\n\r\nfunction ImageHolder(props) {\r\n    let {url, key, user,imageId, onClickImage} = props;\r\n    return (\r\n        <div className=\"imageBoxItem\"onClick = {() => onClickImage(imageId)}>\r\n            <img className=\"image\" src={url}  loading =\"lazy\" alt={\"alt\"} key={key} />\r\n        </div>\r\n        // <div className ={`gallery-container w-${Math.floor(Math.random() * Math.floor(6))} h-${Math.floor(Math.random() * Math.floor(6))}`}\r\n        //     onClick = {() => onClickImage(imageId)}\r\n        // >\r\n        //     <div className=\"gallery-item\">\r\n        //         <div className=\"image\">\r\n        //             <img className=\"image\" src={url}  loading =\"lazy\" alt={\"alt\"} key={key} />\r\n        //         </div>\r\n        //         {/* <div className=\"text\">Nature</div> */}\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default ImageHolder\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport './style.css';\r\n\r\nconst Loading = props => {\r\n    return (\r\n        <div className=\"loadingContainer\">\r\n            <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;\r\n","import React from 'react'\r\nimport './style.css';\r\n\r\nconst Info = props => {\r\n    const {selectedImage, toggleInfoPopup} = props;\r\n    const options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}\r\n    return (\r\n        <div className = \"infoContainer\">\r\n        <div className=\"infoClose\" onClick={toggleInfoPopup}>\r\n            <div class=\"close-container\">\r\n              <div class=\"leftright\"></div>\r\n              <div class=\"rightleft\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"infoHeader\">\r\n            <span className='headerText'>Info</span>\r\n            <div className='subHeader'>{`Published on ${new Date(selectedImage?.created_at).toLocaleDateString('en-us',options)}`}</div>\r\n          </div>\r\n          <div className=\"statistics\">\r\n            <div className =\"viewStats\">\r\n              <span className=\"title\">Views</span>\r\n              <div className = 'value'>{selectedImage?.views.toLocaleString()}</div>\r\n            </div>\r\n            <div className=\"downloadStat\">\r\n              <span className=\"title\">Downloads</span>\r\n              <div className = 'value'>{selectedImage?.downloads.toLocaleString()}</div>\r\n            </div>\r\n            <div className=\"likesStat\">\r\n            <span className=\"title\">Likes</span>\r\n              <div className = 'value'>{selectedImage?.likes.toLocaleString()}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"cameraDetails\">\r\n            <div className=\"cameraItemGroup\">\r\n              <div className=\"cameraItem\">\r\n                <span className=\"title\">Camera Make</span>\r\n                <div className = 'value'>{selectedImage?.exif.make || \"--\"}</div>\r\n              </div>\r\n              <div className=\"cameraItemBottom\">\r\n                <span className=\"title\">Aperture</span>\r\n                <div className = 'value'>{selectedImage?.exif.aperture  || \"--\"}</div>\r\n              </div>\r\n            </div > \r\n              <div className=\"cameraItemGroup\">\r\n                <div className=\"cameraItem\">\r\n                  <span className=\"title\">Camera Model</span>\r\n                  <div className = 'value'>{selectedImage?.exif.model  || \"--\"}</div>\r\n                </div>\r\n                <div className=\"cameraItemBottom\">\r\n                  <span className=\"title\">Shutter speed</span>\r\n                  <div className = 'value'>{selectedImage?.exif.exposure_time  || \"--\"}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"cameraItemGroup\">\r\n                <div className=\"cameraItem\">\r\n                  <span className=\"title\">Focal Length</span>\r\n                  <div className = 'value'>{selectedImage?.exif.focal_length  || \"--\"}</div>\r\n                </div>\r\n                <div className=\"cameraItemBottom\">\r\n                  <span className=\"title\">ISO</span>\r\n                  <div className = 'value'>{selectedImage?.exif.iso  || \"--\"}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"dimension\">\r\n                <span className=\"title\">Dimensions</span>\r\n                <div className ='value'>{`${selectedImage?.width} x ${selectedImage?.height}`}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;\r\n","import React from 'react'\r\nimport Loading from '../Loading';\r\nimport './style.css';\r\n\r\nconst ImagePreview = (props) => {\r\n\r\n    const {selectedImage , toggleInfoPopup, togglePreviewPopup , isPrevDisabled ,onClickPrev, onClickNext} = props;\r\n    return (\r\n        <>\r\n            <div className=\"close\" onClick={togglePreviewPopup}>\r\n              <div class=\"close-container\">\r\n                <div class=\"leftright\"></div>\r\n                <div class=\"rightleft\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"buttonLeft\">\r\n                <div className=\"arrow arrowLeft\" disabled={isPrevDisabled} onClick ={onClickPrev}></div>\r\n            </div>\r\n            <div className=\"imagePreview\">\r\n              <div className=\"header\">\r\n                <div className=\"user\">\r\n                  <div className= \"profilePic\">\r\n                    <img src = {selectedImage?.user.profile_image.small}/>\r\n                  </div>\r\n                  <div className=\"userName\">\r\n                    <span className=\"name\">{selectedImage?.user.name}</span>\r\n                    {selectedImage?.user.instagram_username && (\r\n                      <div>\r\n                        {`@${selectedImage?.user.instagram_username}`}\r\n                      </div>)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"infoButton\" onClick={toggleInfoPopup}>\r\n                  <button className= \"infoButton\">Info</button>\r\n                </div>\r\n              </div>\r\n              {selectedImage ? (\r\n                <div className='imageContainer'>\r\n                  <div className='imageBox'>\r\n                    <img className=\"imageSrc\" src={selectedImage?.urls.regular}  loading=\"lazy\" alt={'alt'} />\r\n                  </div>\r\n                </div>\r\n              ) \r\n              :(\r\n                <div className=\"imageSrc\">\r\n                  <Loading/>\r\n                </div>\r\n              )}       \r\n            </div>\r\n            <div className=\"buttonRight\">    \r\n                <div className=\"arrow arrowRight\" onClick ={onClickNext}></div>\r\n             </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImagePreview;","import { createGlobalStyle } from 'styled-components';\n \nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: -apple-system,BlinkMacSystemFont,San Francisco,Helvetica Neue,Helvetica,Ubuntu,Roboto,Noto,Segoe UI,Arial,sans-serif;\n    fonst-size:15px;\n  }\n`;\n \nexport default GlobalStyle;","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport axios from  'axios';\n\nimport ImageHolder from \"../../components/ImageContainer\";\nimport Loading from '../../components/Loading';\nimport Info from '../../components/InfoContainer';\nimport ImagePreview from '../../components/ImagePreview';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Modal from 'react-modal';\nimport GlobalStyle from '../../theme';\nimport './App.css'\n\nconst customStyles = {\n  overlay:{\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  content : {\n    border: 'none',\n    overflow:'hidden',\n    background:'transparent',\n    paddingRight: 120,\n    paddingLeft: 120,\n  }\n};\n\nconst customInfoStyles = {\n  overlay:{\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  content : {\n    border: 'none',\n    overflow:'hidden',\n    background: 'transparent',\n    display:'flex',\n    alignItems:'center',\n    justifyContent:'center'\n  }\n};\n\nfunction App() {\n\n  const [imageData, setImageData] = useState([]);\n\n  const [selectedImage, setSelectedImage] = useState();\n\n  const [showPreview, setShowPreview] = useState(false);\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const [isPrevDisabled, setprevDisabled] = useState(false);\n\n  // const [element, setElement] = useState(null);\n\n  const fetchUserData =  (count=10) =>{\n    let url = 'https://api.unsplash.com/photos/random?client_id=';\n    let accesskey = process.env.REACT_APP_ACCESSKEY1;\n\n    axios.get(`${url}${accesskey}&count=${count}`)\n    .then((res) => {\n      setImageData([...imageData, ...res.data]);\n    });\n    \n  }\n\n  useEffect(() => {\n   fetchUserData();\n  },[]);\n\n  useEffect(() => {\n    let totalImages = imageData.length -1;\n    if(selectedImage){\n      const selectedImageIndex = imageData?.findIndex((image) => image.id === selectedImage.id);\n      if(selectedImageIndex === 0){\n        setprevDisabled(true);\n      }else{\n        setprevDisabled(false);\n      }\n      if(totalImages - selectedImageIndex <= 3){\n        fetchUserData();\n      }\n    }\n  }, [selectedImage])\n\n  const onSelectImage = (id) => {\n    const selectedImageIndex = imageData?.findIndex((image) => image.id === id);\n    setSelectedImage(imageData[selectedImageIndex]);\n    setShowPreview(true);\n  }\n\n  const onClickNext = useCallback(() => {\n    const selectedImageIndex = imageData?.findIndex((image) => image.id === selectedImage?.id);\n    setSelectedImage(imageData[selectedImageIndex + 1]);\n  },[ImageData,selectedImage]);\n\n  const onClickPrev = useCallback(() => {\n    const selectedImageIndex = imageData?.findIndex((image) => image.id === selectedImage?.id);\n    setSelectedImage(imageData[selectedImageIndex - 1]);\n  },[ImageData,selectedImage])\n\n  // const loader = React.useRef(fetchUserData);\n  // const observer = React.useRef(\n  //   new IntersectionObserver((entries) => {\n  //     // debugger;\n  //     const first = entries[0];\n  //     console.log(first);\n  //     if(first.isIntersecting){\n  //       loader.current();\n  //     }\n  //   }, {threshold: 1})\n  // );\n\n  // useEffect(() => {\n  //   const currentElement = element;\n  //   const currentObserver = observer.current;\n\n  //   if(currentElement){\n  //     currentObserver.observe(currentElement);\n  //   }\n  //   return ()=> {\n  //     console.log('here');\n  //     if(currentElement){\n  //       currentObserver.unobserve(currentElement);\n  //     }\n  //   }\n  // },[element])\n\n  // useEffect(() => {\n  //   loader.current = fetchUserData;\n  // }, [fetchUserData])\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle/>\n      <InfiniteScroll\n        dataLength={imageData.length}\n        next={fetchUserData}\n        hasMore={true}\n        loader={<Loading/>}\n        style={{ overflow: 'hidden' }}\n      >\n        <div className=\"imageWrapper\">\n          {imageData.map(image => \n            <ImageHolder \n              url={image?.urls.full} \n              user = {image?.user} \n              key = {image.id} \n              imageId = {image.id}\n              onClickImage = {onSelectImage}\n            />  \n          )}     \n        </div>\n      </InfiniteScroll>\n\n      <Modal\n          isOpen={showPreview}\n          onRequestClose={()=> setShowPreview(false)}\n          style={customStyles}\n        > \n          <ImagePreview \n            selectedImage={selectedImage} \n            toggleInfoPopup={() => setShowInfo(true)} \n            togglePreviewPopup={() => setShowPreview(false)}\n            isPrevDisabled={isPrevDisabled}\n            onClickPrev={onClickPrev}\n            onClickNext ={onClickNext}\n          />\n        </Modal>\n\n        <Modal\n          isOpen={showInfo}\n          onRequestClose={()=>setShowInfo(false)}\n          style={customInfoStyles}\n        >\n          <Info selectedImage={selectedImage} toggleInfoPopup={() => setShowInfo(false)}/>\n        </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Scenes/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}