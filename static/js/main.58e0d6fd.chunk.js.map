{"version":3,"sources":["components/ImageContainer/index.js","components/Loading/index.js","components/InfoContainer/index.js","components/ImagePreview/index.js","Scenes/App/App.js","reportWebVitals.js","index.js"],"names":["ImageHolder","props","url","key","imageId","onClickImage","className","onClick","src","alt","Loading","Info","selectedImage","toggleInfoPopup","class","Date","created_at","toLocaleDateString","weekday","year","month","day","views","toLocaleString","downloads","likes","exif","make","aperture","model","exposure_time","focal_length","iso","width","height","ImagePreview","togglePreviewPopup","isPrevDisabled","onClickPrev","onClickNext","useState","isImageLoaded","setImageLoaded","useEffect","handleKeyPress","e","keyCode","document","addEventListener","removeEventListener","disabled","urls","regular","onLoad","loading","user","profile_image","small","name","instagram_username","imagePreviewModalStyles","overlay","backgroundColor","content","border","overflow","background","paddingRight","paddingLeft","infoModalStyles","display","alignItems","justifyContent","App","imageData","setImageData","setSelectedImage","showPreview","setShowPreview","showInfo","setShowInfo","setprevDisabled","fetchUserData","count","accesskey","process","axios","get","then","res","data","totalImages","length","selectedImageIndex","findIndex","image","id","onSelectImage","useCallback","dataLength","next","hasMore","loader","style","map","full","isOpen","onRequestClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.58e0d6fd.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css';\r\n\r\nfunction ImageHolder(props) {\r\n    let {url, key,imageId, onClickImage} = props;\r\n    return (\r\n        <div className=\"imageBoxItem\"onClick = {() => onClickImage(imageId)}>\r\n            <img className=\"image\" src={url} alt={\"alt\"} key={key} />\r\n        </div>\r\n    )\r\n}\r\nexport default ImageHolder\r\n","import React from 'react'\r\nimport './style.css';\r\n\r\nconst Loading = props => {\r\n    return (\r\n        <div className=\"loadingContainer\">\r\n            <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;\r\n","import React from 'react'\r\nimport './style.css';\r\n\r\nconst Info = props => {\r\n    const {selectedImage, toggleInfoPopup} = props;   \r\n    // loacl date string options\r\n    const options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}\r\n    \r\n    return (\r\n        <div className = \"infoContainer\">\r\n        <div className=\"infoClose\" onClick={toggleInfoPopup}>\r\n            <div class=\"close-container\">\r\n              <div class=\"leftright\"></div>\r\n              <div class=\"rightleft\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"infoHeader\">\r\n            <span className='headerText'>Info</span>\r\n            <div className='subHeader'>{`Published on ${new Date(selectedImage?.created_at).toLocaleDateString('en-us',options)}`}</div>\r\n          </div>\r\n\r\n          {/* Image statistics */}\r\n\r\n          <div className=\"statistics\">\r\n            <div className =\"viewStats\">\r\n              <span className=\"title\">Views</span>\r\n              <div className = 'value'>{selectedImage?.views.toLocaleString()}</div>\r\n            </div>\r\n            <div className=\"downloadStat\">\r\n              <span className=\"title\">Downloads</span>\r\n              <div className = 'value'>{selectedImage?.downloads.toLocaleString()}</div>\r\n            </div>\r\n            <div className=\"likesStat\">\r\n            <span className=\"title\">Likes</span>\r\n              <div className = 'value'>{selectedImage?.likes.toLocaleString()}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Camera details */}\r\n\r\n          <div className=\"cameraDetails\">\r\n\r\n            <div className=\"cameraItemGroup\">\r\n              <div className=\"cameraItem\">\r\n                <span className=\"title\">Camera Make</span>\r\n                <div className = 'value'>{selectedImage?.exif.make || \"--\"}</div>\r\n              </div>\r\n              <div className=\"cameraItemBottom\">\r\n                <span className=\"title\">Aperture</span>\r\n                <div className = 'value'>{selectedImage?.exif.aperture  || \"--\"}</div>\r\n              </div>\r\n            </div>\r\n\r\n              <div className=\"cameraItemGroup\">\r\n                <div className=\"cameraItem\">\r\n                  <span className=\"title\">Camera Model</span>\r\n                  <div className = 'value'>{selectedImage?.exif.model  || \"--\"}</div>\r\n                </div>\r\n                <div className=\"cameraItemBottom\">\r\n                  <span className=\"title\">Shutter speed</span>\r\n                  <div className = 'value'>{selectedImage?.exif.exposure_time  || \"--\"}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"cameraItemGroup\">\r\n                <div className=\"cameraItem\">\r\n                  <span className=\"title\">Focal Length</span>\r\n                  <div className = 'value'>{selectedImage?.exif.focal_length  || \"--\"}</div>\r\n                </div>\r\n                <div className=\"cameraItemBottom\">\r\n                  <span className=\"title\">ISO</span>\r\n                  <div className = 'value'>{selectedImage?.exif.iso  || \"--\"}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Image dimensions */}\r\n            <div className=\"dimension\">\r\n                <span className=\"title\">Dimensions</span>\r\n                <div className ='value'>{`${selectedImage?.width} x ${selectedImage?.height}`}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;\r\n","import React, {useEffect,useState} from 'react'\r\nimport Loading from '../Loading';\r\nimport './style.css';\r\n\r\nconst ImagePreview = (props) => {\r\n  const {selectedImage , toggleInfoPopup, togglePreviewPopup , isPrevDisabled ,onClickPrev, onClickNext} = props;\r\n\r\n  const [isImageLoaded, setImageLoaded] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if(e.keyCode === 39){\r\n        onClickNext();\r\n      }\r\n      else if(e.keyCode === 37 && !isPrevDisabled){\r\n        onClickPrev();\r\n      }\r\n      else if(e.keyCode === 27){\r\n        togglePreviewPopup();\r\n      } \r\n    }\r\n    document.addEventListener('keydown' , handleKeyPress);\r\n    return (() => {\r\n      document.removeEventListener('keydown',handleKeyPress);\r\n    })\r\n  });\r\n  \r\n    return (\r\n        <>\r\n            <div className=\"close\" onClick={togglePreviewPopup}>\r\n              <div className=\"close-container\">\r\n                <div className=\"leftright\"></div>\r\n                <div className=\"rightleft\"></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"previousButton\">\r\n                <div className=\"arrow arrowLeft\" disabled={isPrevDisabled} onClick ={onClickPrev}></div>\r\n            </div>\r\n\r\n            <>\r\n              <div className='imageContainer'>\r\n                <div className='content'>\r\n                  <img className=\"imageSrc\" src={selectedImage?.urls.regular} onLoad={()=> setImageLoaded(true)} loading =\"lazy\" alt={'alt'} />\r\n                  {!isImageLoaded ? (\r\n                    <div className =\"loadingIcon\">\r\n                      <Loading/>\r\n                    </div>\r\n                    ):(\r\n                    <div className=\"header\">\r\n                      <div className=\"user\">\r\n                        <div className= \"profilePic\">\r\n                          <img src = {selectedImage?.user.profile_image.small} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"userName\">\r\n                          <span className=\"name\">{selectedImage?.user.name}</span>\r\n                          {selectedImage?.user.instagram_username && (\r\n                            <div>\r\n                              {`@${selectedImage?.user.instagram_username}`}\r\n                            </div>)}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"infoButton\" onClick={toggleInfoPopup}>\r\n                        <button className =\"infoButton\">i</button>\r\n                      </div>\r\n                    </div>\r\n                  )}  \r\n                </div>\r\n              </div>       \r\n            </>\r\n            <div className=\"nextButton\">    \r\n                <div className=\"arrow arrowRight\" onClick ={onClickNext}></div>\r\n             </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImagePreview;","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from  'axios';\n\nimport ImageHolder from \"../../components/ImageContainer\";\nimport Loading from '../../components/Loading';\nimport Info from '../../components/InfoContainer';\nimport ImagePreview from '../../components/ImagePreview';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Modal from 'react-modal';\nimport './App.css'\n\nconst imagePreviewModalStyles = {\n  overlay:{\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  content : {\n    border: 'none',\n    overflow:'hidden',\n    background:'transparent',\n    paddingRight: 120,\n    paddingLeft: 120,\n  }\n};\n\nconst infoModalStyles = {\n  overlay:{\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  content : {\n    border: 'none',\n    overflow:'hidden',\n    background: 'transparent',\n    display:'flex',\n    alignItems:'center',\n    justifyContent:'center'\n  }\n};\n\nfunction App() {\n\n  const [imageData, setImageData] = useState([]);  // holsd the fetched image collection\n\n  const [selectedImage, setSelectedImage] = useState(); // current selected image for preview\n\n  const [showPreview, setShowPreview] = useState(false); // flag to toggle image preview modal\n\n  const [showInfo, setShowInfo] = useState(false); //flag to toggle image info modal\n\n  const [isPrevDisabled, setprevDisabled] = useState(false);  // flag to set the previous button disabled\n\n\n  // fucntion to fetch image data\n  const fetchUserData =  (count=10) =>{\n    let url = 'https://api.unsplash.com/photos/random?client_id=';\n    let accesskey = process.env.REACT_APP_ACCESSKEY1;\n\n    axios.get(`${url}${accesskey}&count=${count}`)\n    .then((res) => {\n      setImageData([...imageData, ...res.data]);\n    });\n    \n  }\n\n  useEffect(() => {\n   fetchUserData();\n  },[]);\n\n  useEffect(() => {\n    let totalImages = imageData.length -1;\n    if(selectedImage){\n      const selectedImageIndex = imageData?.findIndex((image) => image.id === selectedImage.id);\n\n      // disabling/ enabling the previous button based on current index  \n      if(selectedImageIndex === 0){\n        setprevDisabled(true);\n      }else{\n        setprevDisabled(false);\n      }\n      // loading next set of images before reaching the end of imageData\n      if(totalImages - selectedImageIndex <= 3){\n        fetchUserData();\n      }\n    }\n  }, [selectedImage])\n\n  const onSelectImage = (id) => {\n    const selectedImageIndex = imageData?.findIndex((image) => image.id === id);\n    setSelectedImage(imageData[selectedImageIndex]);\n    setShowPreview(true);\n  }\n\n  // next - previous click handlers\n\n  const onClickNext = useCallback(() => {\n    const selectedImageIndex = imageData?.findIndex((image) => image.id === selectedImage?.id);\n    setSelectedImage(imageData[selectedImageIndex + 1]);\n  },[imageData,selectedImage]);\n\n  const onClickPrev = useCallback(() => {\n    const selectedImageIndex = imageData?.findIndex((image) => image.id === selectedImage?.id);\n    setSelectedImage(imageData[selectedImageIndex - 1]);\n  },[imageData,selectedImage]);\n\n  return (\n    <div className=\"App\">\n      <InfiniteScroll\n        dataLength={imageData.length}\n        next={fetchUserData}\n        hasMore={true}\n        loader={<Loading/>}\n        style={{ overflow: 'hidden' }}\n      >\n        <div className=\"imageWrapper\">\n          {imageData.map(image => \n            <ImageHolder \n              url={image?.urls.full} \n              user = {image?.user} \n              key = {image.id} \n              imageId = {image.id}\n              onClickImage = {onSelectImage}\n            />  \n          )}     \n        </div>\n      </InfiniteScroll>\n\n      {/* image previe modal */}\n      <Modal\n          isOpen={showPreview}\n          onRequestClose={()=> setShowPreview(false)}\n          style={imagePreviewModalStyles}\n        > \n          <ImagePreview \n            selectedImage={selectedImage} \n            toggleInfoPopup={() => setShowInfo(true)} \n            togglePreviewPopup={() => setShowPreview(false)}\n            isPrevDisabled={isPrevDisabled}\n            onClickPrev={onClickPrev}\n            onClickNext ={onClickNext}\n          />\n        </Modal>\n\n      {/* image Info modal */}\n        <Modal\n          isOpen={showInfo}\n          onRequestClose={()=>setShowInfo(false)}\n          style={infoModalStyles}\n        >\n          <Info selectedImage={selectedImage} toggleInfoPopup={() => setShowInfo(false)}/>\n        </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Scenes/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}